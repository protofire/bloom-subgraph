// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class TokenMarketplaceWithdrawal extends EthereumEvent {
  get params(): TokenMarketplaceWithdrawal__Params {
    return new TokenMarketplaceWithdrawal__Params(this);
  }
}

export class TokenMarketplaceWithdrawal__Params {
  _event: TokenMarketplaceWithdrawal;

  constructor(event: TokenMarketplaceWithdrawal) {
    this._event = event;
  }

  get escrowPayer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TokenMarketplaceEscrowPayment extends EthereumEvent {
  get params(): TokenMarketplaceEscrowPayment__Params {
    return new TokenMarketplaceEscrowPayment__Params(this);
  }
}

export class TokenMarketplaceEscrowPayment__Params {
  _event: TokenMarketplaceEscrowPayment;

  constructor(event: TokenMarketplaceEscrowPayment) {
    this._event = event;
  }

  get escrowPayer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get escrowPayee(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TokenMarketplaceDeposit extends EthereumEvent {
  get params(): TokenMarketplaceDeposit__Params {
    return new TokenMarketplaceDeposit__Params(this);
  }
}

export class TokenMarketplaceDeposit__Params {
  _event: TokenMarketplaceDeposit;

  constructor(event: TokenMarketplaceDeposit) {
    this._event = event;
  }

  get escrowPayer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TokenEscrowMarketplace extends SmartContract {
  static bind(address: Address): TokenEscrowMarketplace {
    return new TokenEscrowMarketplace("TokenEscrowMarketplace", address);
  }

  attestationLogic(): Address {
    let result = super.call("attestationLogic", []);

    return result[0].toAddress();
  }

  try_attestationLogic(): CallResult<Address> {
    let result = super.tryCall("attestationLogic", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  tokenEscrow(param0: Address): BigInt {
    let result = super.call("tokenEscrow", [EthereumValue.fromAddress(param0)]);

    return result[0].toBigInt();
  }

  try_tokenEscrow(param0: Address): CallResult<BigInt> {
    let result = super.tryCall("tokenEscrow", [
      EthereumValue.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  usedSignatures(param0: Bytes): boolean {
    let result = super.call("usedSignatures", [
      EthereumValue.fromFixedBytes(param0)
    ]);

    return result[0].toBoolean();
  }

  try_usedSignatures(param0: Bytes): CallResult<boolean> {
    let result = super.tryCall("usedSignatures", [
      EthereumValue.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  token(): Address {
    let result = super.call("token", []);

    return result[0].toAddress();
  }

  try_token(): CallResult<Address> {
    let result = super.tryCall("token", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class MoveTokensToEscrowLockupForCall extends EthereumCall {
  get inputs(): MoveTokensToEscrowLockupForCall__Inputs {
    return new MoveTokensToEscrowLockupForCall__Inputs(this);
  }

  get outputs(): MoveTokensToEscrowLockupForCall__Outputs {
    return new MoveTokensToEscrowLockupForCall__Outputs(this);
  }
}

export class MoveTokensToEscrowLockupForCall__Inputs {
  _call: MoveTokensToEscrowLockupForCall;

  constructor(call: MoveTokensToEscrowLockupForCall) {
    this._call = call;
  }

  get _sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _nonce(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _delegationSig(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class MoveTokensToEscrowLockupForCall__Outputs {
  _call: MoveTokensToEscrowLockupForCall;

  constructor(call: MoveTokensToEscrowLockupForCall) {
    this._call = call;
  }
}

export class ReleaseTokensFromEscrowCall extends EthereumCall {
  get inputs(): ReleaseTokensFromEscrowCall__Inputs {
    return new ReleaseTokensFromEscrowCall__Inputs(this);
  }

  get outputs(): ReleaseTokensFromEscrowCall__Outputs {
    return new ReleaseTokensFromEscrowCall__Outputs(this);
  }
}

export class ReleaseTokensFromEscrowCall__Inputs {
  _call: ReleaseTokensFromEscrowCall;

  constructor(call: ReleaseTokensFromEscrowCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReleaseTokensFromEscrowCall__Outputs {
  _call: ReleaseTokensFromEscrowCall;

  constructor(call: ReleaseTokensFromEscrowCall) {
    this._call = call;
  }
}

export class RequestTokenPaymentCall extends EthereumCall {
  get inputs(): RequestTokenPaymentCall__Inputs {
    return new RequestTokenPaymentCall__Inputs(this);
  }

  get outputs(): RequestTokenPaymentCall__Outputs {
    return new RequestTokenPaymentCall__Outputs(this);
  }
}

export class RequestTokenPaymentCall__Inputs {
  _call: RequestTokenPaymentCall;

  constructor(call: RequestTokenPaymentCall) {
    this._call = call;
  }

  get _payer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _nonce(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _paymentSig(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class RequestTokenPaymentCall__Outputs {
  _call: RequestTokenPaymentCall;

  constructor(call: RequestTokenPaymentCall) {
    this._call = call;
  }
}

export class MoveTokensToEscrowLockupCall extends EthereumCall {
  get inputs(): MoveTokensToEscrowLockupCall__Inputs {
    return new MoveTokensToEscrowLockupCall__Inputs(this);
  }

  get outputs(): MoveTokensToEscrowLockupCall__Outputs {
    return new MoveTokensToEscrowLockupCall__Outputs(this);
  }
}

export class MoveTokensToEscrowLockupCall__Inputs {
  _call: MoveTokensToEscrowLockupCall;

  constructor(call: MoveTokensToEscrowLockupCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MoveTokensToEscrowLockupCall__Outputs {
  _call: MoveTokensToEscrowLockupCall;

  constructor(call: MoveTokensToEscrowLockupCall) {
    this._call = call;
  }
}

export class ReleaseTokensFromEscrowForCall extends EthereumCall {
  get inputs(): ReleaseTokensFromEscrowForCall__Inputs {
    return new ReleaseTokensFromEscrowForCall__Inputs(this);
  }

  get outputs(): ReleaseTokensFromEscrowForCall__Outputs {
    return new ReleaseTokensFromEscrowForCall__Outputs(this);
  }
}

export class ReleaseTokensFromEscrowForCall__Inputs {
  _call: ReleaseTokensFromEscrowForCall;

  constructor(call: ReleaseTokensFromEscrowForCall) {
    this._call = call;
  }

  get _sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _nonce(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _delegationSig(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class ReleaseTokensFromEscrowForCall__Outputs {
  _call: ReleaseTokensFromEscrowForCall;

  constructor(call: ReleaseTokensFromEscrowForCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _attestationLogic(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}
