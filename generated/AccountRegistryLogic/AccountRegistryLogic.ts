// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class AddressLinked extends EthereumEvent {
  get params(): AddressLinked__Params {
    return new AddressLinked__Params(this);
  }
}

export class AddressLinked__Params {
  _event: AddressLinked;

  constructor(event: AddressLinked) {
    this._event = event;
  }

  get currentAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get linkId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AddressUnlinked extends EthereumEvent {
  get params(): AddressUnlinked__Params {
    return new AddressUnlinked__Params(this);
  }
}

export class AddressUnlinked__Params {
  _event: AddressUnlinked;

  constructor(event: AddressUnlinked) {
    this._event = event;
  }

  get addressToRemove(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InitializationEnded extends EthereumEvent {
  get params(): InitializationEnded__Params {
    return new InitializationEnded__Params(this);
  }
}

export class InitializationEnded__Params {
  _event: InitializationEnded;

  constructor(event: InitializationEnded) {
    this._event = event;
  }
}

export class AccountRegistryLogic extends SmartContract {
  static bind(address: Address): AccountRegistryLogic {
    return new AccountRegistryLogic("AccountRegistryLogic", address);
  }

  initializing(): boolean {
    let result = super.call("initializing", []);

    return result[0].toBoolean();
  }

  try_initializing(): CallResult<boolean> {
    let result = super.tryCall("initializing", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  initializer(): Address {
    let result = super.call("initializer", []);

    return result[0].toAddress();
  }

  try_initializer(): CallResult<Address> {
    let result = super.tryCall("initializer", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  linkIds(param0: Address): BigInt {
    let result = super.call("linkIds", [EthereumValue.fromAddress(param0)]);

    return result[0].toBigInt();
  }

  try_linkIds(param0: Address): CallResult<BigInt> {
    let result = super.tryCall("linkIds", [EthereumValue.fromAddress(param0)]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  usedSignatures(param0: Bytes): boolean {
    let result = super.call("usedSignatures", [
      EthereumValue.fromFixedBytes(param0)
    ]);

    return result[0].toBoolean();
  }

  try_usedSignatures(param0: Bytes): CallResult<boolean> {
    let result = super.tryCall("usedSignatures", [
      EthereumValue.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }
}

export class LinkAddressesCall extends EthereumCall {
  get inputs(): LinkAddressesCall__Inputs {
    return new LinkAddressesCall__Inputs(this);
  }

  get outputs(): LinkAddressesCall__Outputs {
    return new LinkAddressesCall__Outputs(this);
  }
}

export class LinkAddressesCall__Inputs {
  _call: LinkAddressesCall;

  constructor(call: LinkAddressesCall) {
    this._call = call;
  }

  get _currentAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _currentAddressSig(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _newAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _newAddressSig(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _nonce(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class LinkAddressesCall__Outputs {
  _call: LinkAddressesCall;

  constructor(call: LinkAddressesCall) {
    this._call = call;
  }
}

export class MigrateLinkCall extends EthereumCall {
  get inputs(): MigrateLinkCall__Inputs {
    return new MigrateLinkCall__Inputs(this);
  }

  get outputs(): MigrateLinkCall__Outputs {
    return new MigrateLinkCall__Outputs(this);
  }
}

export class MigrateLinkCall__Inputs {
  _call: MigrateLinkCall;

  constructor(call: MigrateLinkCall) {
    this._call = call;
  }

  get _currentAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class MigrateLinkCall__Outputs {
  _call: MigrateLinkCall;

  constructor(call: MigrateLinkCall) {
    this._call = call;
  }
}

export class UnlinkAddressCall extends EthereumCall {
  get inputs(): UnlinkAddressCall__Inputs {
    return new UnlinkAddressCall__Inputs(this);
  }

  get outputs(): UnlinkAddressCall__Outputs {
    return new UnlinkAddressCall__Outputs(this);
  }
}

export class UnlinkAddressCall__Inputs {
  _call: UnlinkAddressCall;

  constructor(call: UnlinkAddressCall) {
    this._call = call;
  }

  get _addressToRemove(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nonce(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _unlinkSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UnlinkAddressCall__Outputs {
  _call: UnlinkAddressCall;

  constructor(call: UnlinkAddressCall) {
    this._call = call;
  }
}

export class EndInitializationCall extends EthereumCall {
  get inputs(): EndInitializationCall__Inputs {
    return new EndInitializationCall__Inputs(this);
  }

  get outputs(): EndInitializationCall__Outputs {
    return new EndInitializationCall__Outputs(this);
  }
}

export class EndInitializationCall__Inputs {
  _call: EndInitializationCall;

  constructor(call: EndInitializationCall) {
    this._call = call;
  }
}

export class EndInitializationCall__Outputs {
  _call: EndInitializationCall;

  constructor(call: EndInitializationCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _initializer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}
